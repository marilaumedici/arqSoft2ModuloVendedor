@startuml
actor Vendedor
activate ProductoController
activate ProductoService
activate ProductoRepository
database MongoDB

title Un vendedor quiere eliminar un producto que no tiene registro asociado al codigo de producto

Vendedor -> ProductoController: eliminarProducto

ProductoController -> ProductoService: eliminarProducto

ProductoService -> ProductoService: validarEmailVendedor

ProductoService -> ProductoService: validaCodigoProductoIngresado

ProductoService -> ProductoRepository: obtenerProductoByCodigo

ProductoRepository -> MongoDB: obtenerProductoByCodigo

MongoDB -> ProductoRepository: <<producto no encontrado>>

ProductoRepository -> ProductoService: <<producto no encontrado>>

ProductoService -> ProductoController: <<ProductoInexistenteException>>

ProductoController -> Vendedor: <<Hubo un error, por favor vuelva a probar mas adelante>>

legend
<b>ESCENARIO:</b> Vendedor elimina un producto que no existe en base

<b>DADO</b> que se trata de eliminar un producto que no existe en base
<b>CUANDO</b> confirma la eliminacion en el sistema  
<b>ENTONCES</b> el sistema devolvera el error ProductoInexistenteException
<b>Y</b> el vendedor vera el mensaje de error "Hubo un error, por favor vuelva a probar mas adelante"
end legend

@enduml